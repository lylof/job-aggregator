"""sync models

Revision ID: 5fa11626410d
Revises: 
Create Date: 2025-06-02 16:56:38.646963

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5fa11626410d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('offers')
    op.drop_table('scraping_history')
    op.drop_constraint(op.f('job_offers_url_key'), 'job_offers', type_='unique')
    op.drop_column('job_offers', 'scrape_timestamp_new')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('job_offers', sa.Column('scrape_timestamp_new', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.create_unique_constraint(op.f('job_offers_url_key'), 'job_offers', ['url'], postgresql_nulls_not_distinct=False)
    op.create_table('scraping_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('site_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_scrape_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('job_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('new_job_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('updated_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('skipped_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('scraping_history_pkey'))
    )
    op.create_table('offers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('company', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('location', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_posted', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('contract_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_scraped', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('is_new', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('source', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source_page_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('apply_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('publish_date_parsed', sa.DATE(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('offers_pkey')),
    sa.UniqueConstraint('url', name=op.f('offers_url_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
